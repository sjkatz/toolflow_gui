/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** "Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
**     the names of its contributors may be used to endorse or promote
**     products derived from this software without specific prior written
**     permission.
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
** $QT_END_LICENSE$
**
****************************************************************************/

#include <QtGui>

#include "graphicsscene.h"
#include "wire.h"

//! [0]
GraphicsScene::GraphicsScene( QObject *parent)
    : QGraphicsScene(parent)
{
    myMode = MoveItem;
    d_line = 0;
}

void GraphicsScene::setMode(Mode mode)
{
    myMode = mode;
}

void GraphicsScene::mousePressEvent(QGraphicsSceneMouseEvent *mouseEvent)
{
    if (mouseEvent->button() != Qt::LeftButton)
        return;

    if(myMode == InsertLine){
        d_line = new QGraphicsLineItem(QLineF(mouseEvent->scenePos(),
                                    mouseEvent->scenePos()));
        //line->setPen(QPen(myLineColor, 2));
        addItem(d_line);
    }else
        QGraphicsScene::mousePressEvent(mouseEvent);
}

void GraphicsScene::mouseMoveEvent(QGraphicsSceneMouseEvent *mouseEvent)
{
    if (d_line != 0 && myMode == InsertLine) {
        QLineF newLine(d_line->line().p1(), mouseEvent->scenePos());
        d_line->setLine(newLine);
    } else if (myMode == MoveItem) {
        QGraphicsScene::mouseMoveEvent(mouseEvent);
    }
}

void GraphicsScene::mouseReleaseEvent(QGraphicsSceneMouseEvent *mouseEvent)
{
    if (d_line != 0 && myMode == InsertLine) {
        QList<QGraphicsItem *> startItems = items(d_line->line().p1());
        if (startItems.count() && startItems.first() == d_line)
            startItems.removeFirst();
        QList<QGraphicsItem *> endItems = items(d_line->line().p2());
        if (endItems.count() && endItems.first() == d_line)
            endItems.removeFirst();

        removeItem(d_line);
        delete d_line;
//! [11] //! [12]

        if(startItems.count() && endItems.count()){
            if(Port *startItem = qgraphicsitem_cast<Port *>(startItems.first())){
                if(Port *endItem = qgraphicsitem_cast<Port *>(endItems.first())){
                    Wire* wire = new Wire(startItem, endItem);
                    addItem(wire);
                    wire->updatePosition();
                }
            }
        }
    }
//! [12] //! [13]
    d_line = 0;
    QGraphicsScene::mouseReleaseEvent(mouseEvent);
}

